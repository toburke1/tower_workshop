---
- name: BACKUP ROUTER CONFIGURATIONS
  hosts: all
  gather_facts: no

  tasks:
    - name: BACKUP CONFIGURATION
      include_role:
        name: "{{ansible_network_os}}"
        tasks_from: backup.yml
      when: ansible_network_os is defined

    # This verifies the backup directory exists on the host you want to store conifgs
    - name: CREATE /tmp/BACKUP DIRECTORY ON {{store_configs}}
      vars:
        ansible_connection: ssh
      file:
        path: /tmp/backup
        state: directory
      delegate_to: "{{store_configs}}"
      run_once: yes
      become: yes

    # - name: DEBUG WHO IS FIRST
    #   debug:
    #     msg: "{{groups['all']|first}}"
    #
    # - name: DEBUG WHO IS FIRST
    #   debug:
    #     msg: "{{hostvars.rtr1}}"
    #
    # - name: DEBUG WHO IS FIRST
    #   debug:
    #     msg: "{{hostvars.rtr1.config_output}}"
    #
    # - name: DEBUG WHO IS FIRST
    #   debug:
    #     msg: "{{hostvars.rtr1.config_output.backup_path}}"
    #
    # - name: DEBUG WHO IS FIRST
    #   debug:
    #     msg: "{{hostvars[rtr1]}}"

    - name: CREATE TIMESTAMP DIRECTORY
      vars:
        ansible_connection: ssh
      file:
        path: "/tmp/backup/{{hostvars.rtr1.config_output.backup_path.split('.')[-1]}}"
        state: directory
      delegate_to: "{{store_configs}}"
      run_once: yes
      become: yes

    # This might be required because you might be running a Tower cluster
    # e.g. we want the configs backed up to one spot
    # versus scattered indidivual nodes
    # the conditional when doesn't push it, if that router failed earlier
    - name: TRANSFER FILE FROM THIS ANSIBLE HOST TO {{store_configs}}
      vars:
        backup_filename: "{{inventory_hostname}}"
        ansible_connection: ssh
        backup_folder: "{{hostvars.rtr1.config_output.backup_path.split('.')[-1]}}"
      copy:
        src: "{{config_output.backup_path}}"
        dest: "/tmp/backup/{{backup_folder}}/{{backup_filename}}"
      delegate_to: "{{store_configs}}"
      when: config_output is defined
      become: yes

- name: BACKUP ROUTER CONFIGURATIONS
  hosts: localhost
  gather_facts: yes
  tasks:
    - name: FIND BACKUPS
      find:
        paths: /tmp/backup
        file_type: directory
      register: backups
      run_once: true
      delegate_to: "{{store_configs}}"
      become: yes

    #- name: CREATE RESTORE JOB TEMPLATE
    #  tower_job_template:
    #    name: "RESTORE NETWORK CONFIG"
    #    job_type: "run"
    #    inventory: "Workshop Inventory"
    #    project: "Workshop Project"
    #    playbook: "network_restore.yml"
    #    credential: "Workshop Credential"
    #    survey_enabled: true
    #    survey_spec: "{{ lookup('template', '{{playbook_dir}}/templates/backup.j2') }}"
    #    tower_username: admin
    #    tower_password: r3dh4t1!
    #    tower_host: "https://{{ansible_fqdn}}"
